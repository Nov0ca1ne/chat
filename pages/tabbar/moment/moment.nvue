<template>
	<view class="page">
		<!-- 导航栏 -->

		<my-trans-bar @clickAdd="add" class="" title="洪大海" :scrollTop="scrollTop" is-cover="true">
			<my-icon-button fontClass="text-white" slot="right" :icon="'\ue600'"></my-icon-button>
		</my-trans-bar>

		<view class="position-relative">
			<!-- 背景 -->
			<view class="position-absolute flex flex-column top-0 left-0 right-0" style="">
				<image class="position-absolute flex-1 top-0 left-0 right-0" src="../../../static/images/1.jpg" mode="widthFix"></image>
				<view class="bg-white" style="height: 480rpx; opacity: 0"></view>
			</view>

			<view class="pl-5 pr-5 pt-4" style="margin-top: 130rpx">
				<view class="flex">
					<!-- 头像 -->
					<u-avatar class="" style="" src="../../../static/images/2.jpg" size="70"></u-avatar>
					<view class="flex justify-center flex-column ml-3 mt-2"></view>
				</view>
				<view class="" style="height: 70rpx"></view>
			</view>

			<!-- 内容 -->
			<view class="rounded-top bg-white" style="">
				<my-divider></my-divider>
				<!-- 动态列表 -->
				<my-trends-list ref="trendItem" @action="doAction" v-for="(item, index) in list" :item="item" :index="index" :key="item.id"></my-trends-list>
			</view>

			<my-divider></my-divider>
			<my-divider></my-divider>
		</view>
		<!-- 占位 触发clickPage -->
		<view v-if="showInput" class="position-fixed top-0 right-0 bottom-0 left-0" :style="clickBody" @touchstart="clickPage"></view>
		<!-- 底部输入框 -->
		<view v-if="showInput" ref="isInput" class="position-fixed bg-white left-0 right-0 bottom-0">
			<view class="">
				<view class="position-relative flex align-center m-2 rounded-circle bg-input" :style="`height:${textHeight}rpx`">
					<view class="flex-1">
						<!-- 文字输入框 -->
						<textarea
							ref="textarea"
							:focus="true"
							:cursor="cursor"
							v-model="comment"
							:adjust-position="false"
							max-length="200"
							fixed
							placeholder="评论"
							class="pt-2 pb-2 pl-2 font-md"
							style="height: 90rpx"
						></textarea>
					</view>
					<!-- 表情 -->
					<my-icon-button class="" @click="openEmoji" :font-style="'font-size:33;'" :icon="'\ue64a'"></my-icon-button>
					<!-- 发送 -->
					<view style="width: 70rpx; height: 70rpx" class="justify-center align-center bg-primary rounded-circle mr-1" @click="send">
						<text class="iconfont text-white">&#xe888;</text>
					</view>
				</view>
			</view>
			<!-- 表情包菜单 -->
			<view ref="emojiMenu" class="bg-white animate-more position-fixed left-0 right-0 bottom-0">
				<!-- 表情 -->
				<view v-if="isActive"><emoji @sendEmoji="sendEmoji" @deleteEmoji="deleteEmoji"></emoji></view>
			</view>
		</view>

		<u-popup bgColor="#f8f8f8" @close="close" :show="show" round="25" mode="bottom" style="">
			<my-divider></my-divider>
			<my-divider></my-divider>
			<view class="flex justify-center">
				<view v-for="(item, index) in addList" class="flex flex-1 flex-column align-center justify-center">
					<view
						@click="navigate(item.type)"
						hover-class="icon-hover"
						:style="`background-color:${item.color}`"
						class="flex justify-center align-center rounded"
						style="height: 130rpx; width: 130rpx"
					>
						<text class="iconfont text-white font-70">{{ item.icon }}</text>
					</view>
					<view class="mt-3">
						<u--text :text="item.name"></u--text>
					</view>
				</view>
			</view>
			<my-divider></my-divider>
			<my-divider></my-divider>
		</u-popup>
	</view>
</template>

<script>
import MyTransBar from '@/components/my-ui/my-transparent-bar.vue';
import MyIconButton from '@/components/my-ui/my-icon-button.vue';
import MyDivider from '@/components/my-ui/my-divider.vue';
import MyImage from '@/components/my-ui/my-image.vue';
import MyTrendsList from '@/components/my-ui/my-trends-list.vue';
const animation = weex.requireModule('animation');
import mixin from '@/common/mixin/base.js';
import emoji from '@/components/emoji.vue';
import $C from '@/common/lib/config.js';
const dom = weex.requireModule('dom');
export default {
	components: {
		MyTransBar,
		MyIconButton,
		MyTrendsList,
		MyDivider,
		MyImage,
		emoji
	},
	mixins: [mixin],
	data() {
		return {
			comment: '',
			navBarHeight: 0,
			scrollTop: 0,
			showInput: false,
			showEmoji: false,
			keyboardHeight: 0,
			cursor: 0, //输入框光标位置
			emojiList: [], //表情包
			emojiUrl: $C.emojiUrl,
			isActive: false,
			commentIndex: -1,
			clickHeight: 0, //占位高度
			show: false,
			addList: [
				{
					name: '图文',
					icon: '\ue72c',
					color: '#3B5CF0',
					type: 'image'
				},
				{
					name: '视频',
					icon: '\ue7a4',
					color: '#eb5a56',
					type: 'video'
				},
				{
					name: '文字',
					icon: '\ue6f8',
					color: '#673AB7',
					type: 'text'
				}
			],
			list: [
				{
					id: 2,
					avatar: '/static/images/2.jpg',
					content: '2024❤️🎀一起变成更好的人～ ',
					username: '洪大海',
					image: [
						{
							src: '/static/images/bg.jpg'
						}
					],
					video: false,
					create_time: new Date().getTime() / 1000 - 60 * 5,
					like: [
						{
							id: 1,
							username: 'hcl',
							avatar: '/static/images/hcl.jpg'
						},
						{
							id: 1,
							username: 'hcl',
							avatar: '/static/images/hcl.jpg'
						},
						{
							id: 1,
							username: 'hcl',
							avatar: '/static/images/hcl.jpg'
						},
						{
							id: 1,
							username: 'hcl',
							avatar: '/static/images/hcl.jpg'
						},
						{
							id: 1,
							username: 'hcl',
							avatar: '/static/images/hcl.jpg'
						},
						{
							id: 1,
							username: 'hcl',
							avatar: '/static/images/hcl.jpg'
						},
						{
							id: 1,
							username: 'hcl',
							avatar: '/static/images/hcl.jpg'
						}
					],
					comments: [
						{
							id: 1,
							avatar: '/static/images/hcl.jpg',
							username: 'hcl',
							content: '哈哈哈哈哈哈'
						},
						{
							id: 1,
							avatar: '/static/images/hcl.jpg',
							username: 'hcl',
							content: '哈哈哈哈哈哈'
						},
						{
							id: 2,
							avatar: '/static/images/2.jpg',
							username: '洪大海',
							content: '可以的'
						}
					]
				},
				{
					id: 1,
					avatar: '/static/images/hcl.jpg',
					content: '2024❤️🎀一起变成更好的人～ ',
					username: 'hcl',
					image: [
						{
							src: '/static/images/1.jpg'
						},
						{
							src: '/static/images/bg.jpg'
						},
						{
							src: '/static/images/1.jpg'
						},
						{
							src: '/static/images/bg.jpg'
						},
						{
							src: '/static/images/2.jpg'
						},
						{
							src: '/static/images/bg.jpg'
						},
						{
							src: '/static/images/bg.jpg'
						},
						{
							src: '/static/images/bg.jpg'
						},
						{
							src: '/static/images/bg.jpg'
						}
					],
					video: false,
					create_time: 1567481668,
					like: [
						{
							id: 1,
							username: 'hcl',
							avatar: '/static/images/hcl.jpg'
						}
					],
					comments: [
						{
							id: 1,
							username: 'hcl',
							content: '哈哈哈哈哈哈'
						}
					]
				},
				{
					id: 2,
					avatar: '/static/images/2.jpg',
					content: '2024❤️🎀一起变成更好的人～ ',
					username: '洪大海',
					image: [
						{
							src: '/static/images/bg.jpg'
						}
					],
					video: {
						poster: '/static/images/bg.jpg',
						src: '/static/video/demo.mp4'
					},
					create_time: new Date().getTime() / 1000 - 60 * 5,
					like: [
						{
							id: 1,
							username: 'hcl',
							avatar: '/static/images/hcl.jpg'
						}
					],
					comments: [
						{
							id: 1,
							username: 'hcl',
							content: '哈哈哈哈哈哈'
						}
					]
				},
				{
					id: 2,
					avatar: '/static/images/2.jpg',
					content: '2024❤️🎀一起变成更好的人～ ',
					username: '洪大海',
					image: [
						{
							src: '/static/images/bg.jpg'
						}
					],
					video: {
						poster: '/static/images/bg.jpg',
						src: '/static/video/demo.mp4'
					},
					create_time: new Date().getTime() / 1000 - 60 * 5,
					like: [
						{
							id: 1,
							username: 'hcl',
							avatar: '/static/images/hcl.jpg'
						}
					],
					comments: [
						{
							id: 1,
							username: 'hcl',
							content: '哈哈哈哈哈哈'
						}
					]
				}
			]
		};
	},
	created() {
		const statusBarHeight = plus.navigator.getStatusbarHeight();
		this.navBarHeight = statusBarHeight + uni.upx2px(150);
	},
	computed: {
		//占位位置
		clickBody() {
			return `bottom:${uni.upx2px(130) + this.clickHeight}px;top:${this.navBarHeight}px  `;
		}
	},
	onPageScroll(e) {
		this.scrollTop = e.scrollTop;
	},
	methods: {
		navigate(type) {
			uni.navigateTo({
				url: '/pages/tabbar/moment/add-moment/add-moment?type=' + type,
				animationType: 'slide-in-bottom'
			});
			this.show = false;
		},
		add() {
			this.show = true;
		},
		close() {
			this.show = false;
		},
		clickPage() {
			//键盘升降
			if (!this.showEmoji && this.keyboardHeight > 0) {
				uni.hideKeyboard();
				this.clickHeight = 0;
				this.InputAnimate(this.keyboardHeight, 300);
			}

			if (this.showEmoji && this.keyboardHeight == 0) {
				this.keyboardHeight = 0;
				this.InputAnimate(this.keyboardHeight, 300);
				this.closeEmoji();
				return;
			}
			if (!this.showEmoji && this.keyboardHeight == 0 && this.clickHeight == 0) {
				this.showInput = false;

				uni.showTabBar();
			}
		},
		// 打开表情菜单
		openEmoji() {
			this.showEmoji = !this.showEmoji;
			this.clickHeight = 292;
			this.isActive = true;
			uni.hideKeyboard();

			if (this.showEmoji && this.keyboardHeight == 0) {
				this.keyboardHeight = 292;
				this.InputAnimate(this.keyboardHeight, 300);
				animation.transition(
					this.$refs.emojiMenu,
					{
						styles: {
							height: '610rpx'
						},
						needLayout: true,
						duration: 300, //ms
						timingFunction: 'ease'
					},
					() => {
						this.keyboardHeight = 0;
					}
				);
			}
			if (!this.showEmoji) {
				this.keyboardHeight = 0;
				this.InputAnimate(this.keyboardHeight, 300);
				this.closeEmoji();
			}
		},
		closeEmoji() {
			this.showEmoji = false;
			this.isActive = false;
			this.clickHeight = 0;
			animation.transition(
				this.$refs.emojiMenu,
				{
					styles: {
						height: '0rpx'
					},
					needLayout: true,
					duration: 300, //ms
					timingFunction: 'ease-out'
				},
				() => {}
			);
		},
		// 输入框上滑动画
		InputAnimate(height, time) {
			animation.transition(
				this.$refs.isInput,
				{
					styles: {
						transform: `translateY(-${height}rpx)`
					},

					duration: time, //ms
					timingFunction: 'ease'
				},
				function () {}
			);
		},
		// 输入框加表情
		sendEmoji(emoji) {
			this.$refs.textarea.getSelectionRange((res) => {
				// 字符串转为数组
				const arr = this.comment.split('');
				// 在指定位置插入字符
				arr.splice(res.selectionEnd, 0, emoji);
				let newStr = arr.join('');
				this.comment = newStr;
				// 恢复光标位置

				this.cursor = res.selectionEnd + emoji.length;
			});
		},
		// 删除输入框表情，拆分为数组处理，再拼接为字符串
		deleteEmoji() {
			let strArr = Array.from(this.comment);
			strArr.pop();
			this.comment = strArr.join('');
			this.cursor -= 2;
		},

		// 更多操作
		doAction(e) {
			switch (e.event) {
				case 'like':
					e.item.like.push({
						id: 2,
						username: '洪大海',
						avatar: '/static/images/2.jpg'
					});
					break;
				case 'comment':
					this.showInput = true;
					uni.hideTabBar();
					this.commentIndex = e.index;
					this.pageToIndex(true, this.commentIndex);
					break;

				default:
					break;
			}
		},
		//滚动
		pageToIndex(value, index) {
			let trendItem = this.$refs.trendItem;
			let y = 0;
			let commentIndex = index;
			let to = trendItem[index];
			dom.getComponentRect(to, (e) => {
				y = e.size.height;
			});

			setTimeout(() => {
				if (to) {
					console.log(y);
					dom.scrollToElement(to, { animated: value, offset: y / 2 });
				}
			}, 50);
		},
		send() {
			if (this.comment === '') {
				return uni.showToast({
					icon: 'none',
					title: '评论内容为空'
				});
			}
			this.list[this.commentIndex].comments.push({
				id: 1,
				avatar: '/static/images/hcl.jpg',
				username: 'hcl',
				content: this.comment
			});
			uni.hideKeyboard();
			this.comment = '';
			this.showInput = false;
		}
	},
	mounted() {
		// 监听键盘高度变化
		uni.onKeyboardHeightChange((res) => {
			this.keyboardHeight = res.height;

			//键盘升降
			if (!this.showEmoji) {
				this.InputAnimate(this.keyboardHeight, 300);

				if (this.keyboardHeight == 0) {
					this.clickHeight = this.keyboardHeight;
				}
			}
			// 打开输入框点击表情
			if (this.showEmoji && this.keyboardHeight == 0) {
				this.InputAnimate(292, 300);
				this.clickHeight = 292;
				animation.transition(
					this.$refs.emojiMenu,
					{
						styles: {
							height: '610rpx'
						},
						needLayout: true,
						duration: 0, //ms
						timingFunction: 'ease-in'
					},
					() => {}
				);
			}
			// 点击表情打开输入框
			if (this.showEmoji && this.keyboardHeight > 0) {
				this.clickHeight = this.keyboardHeight;
				this.InputAnimate(this.clickHeight, 300);

				this.closeEmoji();
			}
		});
	}
};
</script>

<style>
.animate-more {
	height: 0rpx;
}
</style>
